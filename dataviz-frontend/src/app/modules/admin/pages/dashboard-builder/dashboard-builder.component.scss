// ... (dashboard-builder.component.scss content from previous response, unchanged)
.dashboard-builder {
  /* This ensures the entire component takes full viewport height and uses flex for layout */
  height: 100vh;
  // Tailwind's flex-col is used directly in HTML
}

// Angular Material Tabs specific overrides for height calculation
.section-tabs {
  height: 100%; // Make the tab group fill its parent (builder-content)
}

.section-tabs ::ng-deep .mat-mdc-tab-body-wrapper {
  // Calculate remaining height for tab content after tab headers
  height: calc(100% - 48px); /* Adjust 48px if mat-tab-header height changes */
  overflow: auto; /* Enable scrolling for tab content */
  display: block; // Ensures flex-1 on content works
}

// CDK Drag & Drop styles - these are crucial for visual feedback during drag operations
.widget-card.cdk-drag-preview {
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15); // Stronger shadow for the item being dragged
  border-color: #2196f3; // Highlight border
  border-style: solid;
  border-width: 2px;
  border-radius: 8px;
  opacity: 0.9;
  background: white; // Ensure background is visible
  display: flex;
  flex-direction: column;
}

.widget-card.cdk-drag-placeholder {
  opacity: 0.3; // Make the placeholder transparent
  border: 2px dashed #ccc; // Dashed border for placeholder
  background: #f0f0f0; // Light background for placeholder
  border-radius: 8px;
}

.widget-card.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1); // Smooth animation when dropping
}

// Ensure the grid items span correctly for smaller screens if columnSize/rowSize are large
// This media query is a fallback/override for larger column sizes on small screens
@media (max-width: 768px) {
  .widget-card {
    /* On small screens, force all widgets to span 1 column */
    @apply col-span-1 !important;
    @apply row-span-1 !important;
  }
}